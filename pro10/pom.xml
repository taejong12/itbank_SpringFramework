<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.test</groupId>
	<artifactId>pro10</artifactId>
	<name>pro10</name>
	<packaging>war</packaging>
	<version>1.0.0-BUILD-SNAPSHOT</version>
	<properties>
		<java-version>1.6</java-version>
		<org.springframework-version>3.1.1.RELEASE</org.springframework-version>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
	</properties>
	<dependencies>
		<!-- Spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${org.springframework-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				 </exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
				
		<!-- AspectJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>	
		
		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${org.slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${org.slf4j-version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.15</version>
			<exclusions>
				<exclusion>
					<groupId>javax.mail</groupId>
					<artifactId>mail</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.jms</groupId>
					<artifactId>jms</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jdmk</groupId>
					<artifactId>jmxtools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.jmx</groupId>
					<artifactId>jmxri</artifactId>
				</exclusion>
			</exclusions>
			<scope>runtime</scope>
		</dependency>

		<!-- @Inject -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>
				
		<!-- Servlet -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>1.2</version>
		</dependency>
		
		<!-- Spring AOP -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>2.2</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>${org.aspectj-version}</version>
		</dependency>
		
		<!-- 다중 파일 다운로드 관련 -->
		<!-- 
			Apache Commons FileUpload (commons-fileupload) 
			1. Java 웹 애플리케이션에서 파일 업로드 기능을 쉽게 구현할 수 있도록 도와주는 라이브러리
			2. multipart/form-data 방식의 요청을 처리하여 파일을 서버에 저장하는 기능을 제공함
			3. 파일을 한 개만 업로드할 수도 있고, 다중 파일 업로드(Multiple File Upload)도 가능함
			
			주요 클래스 및 기능
			1. ServletFileUpload -> 파일 업로드를 다루는 주요 클래스
			2. FileItem -> 업로드된 개별 파일을 나타냄
			3. DiskFileItemFactory -> 업로드된 파일을 메모리 또는 디스크에 저장하는 방식 설정
		-->
		
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.1</version>
		</dependency>
		
		<!--
		 	Apache Commons IO (commons-io)
		 	1. 파일을 다루는 다양한 기능을 제공하는 라이브러리
		 	2. 파일 복사, 삭제, 이동, 읽기, 쓰기 등을 쉽게 처리할 수 있도록 도와줌
		 	3. commons-fileupload와 함께 사용되며, 파일 스트림을 다룰 때 유용함
		 	
		 	주요 클래스 및 기능
		 	1. FIleUtils -> 파일 복사, 삭제, 이동 등의 유틸리티 기능 제공
		 	2. IOUtils -> 입력 스트림(InputStream)과 출력 스트림(OutputStream) 간 데이터 전송을 쉽게 할 수 있도록 지원
		 	3. FilenameUtils -> 파일명 관련 처리를 쉽게 할 수 있도록 도와줌 (예: 확장자 추출 등)
		 -->
		 
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>
		
		<!-- 
			두 라이브러리의 관계
			1. commons-fileupload 는 파일 업로드 기능을 제공하지만, 내부적으로 파일을 다루는 기능이 부족함
			2. 그래서 commons-io 를 함께 사용하여 파일을 저장하거나 읽는 등의 작업을 원할하게 수행함
			3. commons-fileupload는 파일 업로드 기능 제공
			4. commons-io는 파일 및 스트림을 다루는 유틸리트 기능 제공
		 -->
		
		
		<!-- 썸네일 -->
		<dependency>
			<groupId>net.coobird</groupId>
			<artifactId>thumbnailator</artifactId>
			<version>0.4.8</version>
		</dependency>
		
		<!-- 스프링 이메일 -->
		<!-- 
			spring-contest-support
			1. Spring 에서 이메일 전송을 지원하는 클래스들을 포함하는 라이브러리
			2. JavaMailSender 같은 메일 전송 기능을 제공하는 클래스가 포함되어 있음
			3. 이 라이브러리를 추가하면 Spring의 JavaMailSender를 이용해서 이메일을 쉽게 보낼 수 있음
			
			javax.mail-api
			1. Java에서 이메일을 처리하기 위한 API
			2. JavaMail API는 이메일을 보낼 때 SMTP, IMAP, POP3 같은 프로토코을 지원
			3. javax.mail 패키지 안에 있는 Session, Message, Transport 등의 클래스를 제공하여 메일을 주고 받을 수 있음
			4. javax.mail-api 만 추가하면 실제 이메일을 보낼 수 없음
			5. API만 제공할 뿐, 실제 구현체가 없기 때문에 com.sun.mail 라이브러리가 추가로 필요함
			
			javax.mail
			1. javax.mail-api 의 실제 구현체
			2. javax.mail-api는 메일 전송을 위한 인터페이스만 제공하는데, 이 라이브러리는 해당 인터페이스의 구현체를 포함하고 있음
			3. SMTP, IMAP, POP3 프로토콜을 실제로 처리할 수 있도록 기능을 제공함
			
			세 가지 의존성은 Spring에서 이메일을 전송하기 위해 필요한 라이브러리들
			spirng-context-support -> Spring에서 JavaMail을 지원하는 기능 제공
			javax.mail-api -> JavaMail API (메일 전송 관련 인터페이스 제공)
			javax.mail -> JavaMail API의 실제 구현체 (SMTP, IMAP, POP3 처리 가능)
			
			이 라이브러리들을 추가하면 Spring에서 JavaMailSender를 이용하여 이메일을 보낼 수 있음
		 -->
		 
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${org.springframework-version}</version>
		</dependency>
		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>javax.mail-api</artifactId>
			<version>1.5.4</version>
		</dependency>
		<dependency>
			<groupId>com.sun.mail</groupId>
			<artifactId>javax.mail</artifactId>
			<version>1.5.4</version>
		</dependency>
		
		<!-- Test -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.7</version>
			<scope>test</scope>
		</dependency>        
	</dependencies>
    <build>
        <plugins>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
                <configuration>
                    <additionalProjectnatures>
                        <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
                    </additionalProjectnatures>
                    <additionalBuildcommands>
                        <buildcommand>org.springframework.ide.eclipse.core.springbuilder</buildcommand>
                    </additionalBuildcommands>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.5.1</version>
                <configuration>
                    <source>1.6</source>
                    <target>1.6</target>
                    <compilerArgument>-Xlint:all</compilerArgument>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <configuration>
                    <mainClass>org.test.int1.Main</mainClass>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
